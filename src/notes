
**** BINARY SEARCH TREE ****

At the beginning of the program, it reads data (cocktail objects) from Cocktails.txt and by using BST inorder (makes alphabetically order)
it creates a sorted arraylist. After creating a new cocktail or editing/deleting an existing cocktail, it rearranges the arraylist and BST.


**** QUEUE ****

When a customer creates a new order, system adds the cocktails from customer's order list to the queue. They will also be displayed
in a default list model panel in order. By using a panel, the barmaid can only send the order at the top,
which satisfies "first in first out" philosophy of queue structure.


--------------------------------------------------------------------------------------------------------------------------------------------

*** PROBLEMS TO CONSIDER ***

a) You can create new "identical" cocktail recipes. It can recognize if their name is different. Identical cocktails are not shown in the panel
but their data still stays in Cocktails.txt .  You can see this after adding another new cocktail because by that time it shows those identical
cocktails. It is probably like that because cocktails are also stored in the arraylist and we rearrange the DLM according to that.

b) In order for customers to display new changes in menu (new cocktail, updated cocktail, deleted cocktail) program needs to be restarted.
This wouldn't be a problem if we had used a real SQL database but in this case we're reading the data from a txt file, supported by arraylist
and it would make things too complicated if we had tried also updating customers' menu after making changes in staff panel menu.

